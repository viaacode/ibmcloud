apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: nginx-ingess-controller.tpl
  annotations:
    description: >-
      Creates meemoo-specific configuration for the nginx ingress controller
      Used iso the operator as the operateor does not provide the annototaions needed for the service
objects:
  - apiVersion: networking.k8s.io/v1
    kind: IngressClass
    metadata:
      name: nginx-${ENV}
    spec:
      controller: nginx.org/ingress-controller
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: nginx-config-${ENV}
      namespace: nginx-ingress
    data:
      proxy-protocol: "True"
      real-ip-header: "proxy_protocol"
      set-real-ip-from: ${LB_SUBNET}
      real-ip-recursive: 'True'
  - apiVersion: v1
    kind: Service
    metadata:
      name: nginx-ingress-controller-${ENV}
      namespace: nginx-ingress
      annotations:
        service.kubernetes.io/ibm-load-balancer-cloud-provider-enable-features: "proxy-protocol"
        service.kubernetes.io/ibm-load-balancer-cloud-provider-ip-type: "public"
        service.kubernetes.io/ibm-load-balancer-cloud-provider-zone: "eu-de-1"
    spec:
      type: LoadBalancer
      selector:
        app: nginx-ingress-controller-${ENV}
      ports:
       - name: http
         protocol: TCP
         port: 80
         targetPort: http
       - name: https
         protocol: TCP
         port: 443
         targetPort: https
      externalTrafficPolicy: Local
      sessionAffinity: None
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
      name: nginx-ingress-controller-${ENV}
      namespace: nginx-ingress
    spec:
      replicas: ${{NPODS}}
      selector:
        matchLabels:
          app: nginx-ingress-controller-${ENV}
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: nginx-ingress-controller-${ENV}
          name: nginx-ingress-controller-${ENV}
        spec:
          containers:
          - args:
            - -nginx-configmaps=nginx-ingress/nginx-config-${ENV}
            - -default-server-tls-secret=nginx-ingress/star.hetarchief.be
            - -nginx-plus
            - -leader-election-lock-name=nginx-ingress-controller-lock-${ENV}
            - -wildcard-tls-secret=nginx-ingress/star.hetarchief.be
            - -ingress-class=nginx-${ENV}
            - -enable-preview-policies=${PREVIEW}
            env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            image: image-registry.openshift-image-registry.svc:5000/nginx-ingress/nginx-plus-ingress:${ENV}
            imagePullPolicy: IfNotPresent
            name: nginx-ingress-controller-${ENV}
            ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
            - containerPort: 8081
              name: readiness-port
              protocol: TCP
            - containerPort: 9113
              name: prometheus
              protocol: TCP
            readinessProbe:
              httpGet:
                path: /nginx-ready
                port: readiness-port
              periodSeconds: 1
            securityContext:
              allowPrivilegeEscalation: true
              capabilities:
                add:
                - NET_BIND_SERVICE
                drop:
                - ALL
              runAsUser: 101
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccount: nginx-ingress
          serviceAccountName: nginx-ingress
          terminationGracePeriodSeconds: 30
parameters:
  - description: Environment (prd, qas, int or dev)
    displayName: Environment
    name: ENV 
    required: true
  - description: scope
    displayName: scope
    name: SCOPE
    required: true
  - description: Subnet of the loadbalancers (allow proxy protocol)
    displayName: lb-subnet
    name: LB_SUBNET
    required: true
  - description: Number of replica's for the ingress controller pods
    displayName: n-pods
    name: NPODS
    value: "1"
  - description: Enable Preview Policies
    displayName: preview
    name: PREVIEW
    value: "false"
